import datetime

_decodeTable = [
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  #   0 - 15
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  #  16 - 31
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, 0,  -1, -1,  #  32 - 47
    54, 55, 56, 57, 58, 59, 60, 61,
    62, 63, -1, -1, -1, -1, -1, -1,  #  48 - 63
    -1, 2,  3,  4,  5,  6,  7,  8,
    9,  10, 11, 12, 13, 14, 15, 16,  #  64 - 79
    17, 18, 19, 20, 21, 22, 23, 24,
    25, 26, 27, -1, -1, -1, -1, 1,  #  80 - 95
    -1, 28, 29, 30, 31, 32, 33, 34,
    35, 36, 37, 38, 39, 40, 41, 42,  #  96 - 111
    43, 44, 45, 46, 47, 48, 49, 50,
    51, 52, 53, -1, -1, -1, -1, -1,  # 112 - 127
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  # 128 - 143
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  # 144 - 159
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  # 160 - 175
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  # 176 - 191
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  # 192 - 207
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  # 208 - 223
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1,  # 224 - 239
    -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1];  # 240 - 255


def decodeHLCTimestamp(ts):
    if not isinstance(ts, str):
        return False

    if len(ts) > 11:
        return False

    r = 0
    for c in ts:
        d = _decodeTable[ord(c)]

        if d < 0:
            return False
        r = (r << 6) | d

    return (r >> 20, r & 0xfffff)


def decode(ts):
    d = decodeHLCTimestamp(ts)
    if not d is False:
        return "time: {}, count: {}".format(datetime.datetime.fromtimestamp(d[0] / 1000).isoformat(), d[1])
    return "invalid timestamp"

if __name__ == '__main__':
    print ("Found   :", decodeHLC("_YnJ5E7S---"))
    print ("Expected: 2019-05-07T17:48:11.349000")







